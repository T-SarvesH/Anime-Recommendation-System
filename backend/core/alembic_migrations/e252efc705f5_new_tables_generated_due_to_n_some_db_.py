"""New Tables generated due to n some db issue

Revision ID: e252efc705f5
Revises: 
Create Date: 2025-06-16 19:42:44.876457

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e252efc705f5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('anime',
    sa.Column('animeId', sa.Integer(), nullable=False),
    sa.Column('animeName', sa.String(), nullable=False),
    sa.Column('genres', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('is_adult_rated', sa.Boolean(), nullable=True),
    sa.Column('is_running', sa.Boolean(), nullable=True),
    sa.Column('releaseDate', sa.DateTime(), nullable=False),
    sa.Column('seasons', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('image_url_base_anime', sa.String(), nullable=True),
    sa.Column('trailer_url_base_anime', sa.String(), nullable=True),
    sa.Column('studio', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('animeId'),
    sa.UniqueConstraint('animeName')
    )
    op.create_index(op.f('ix_anime_animeId'), 'anime', ['animeId'], unique=False)
    op.create_table('genres',
    sa.Column('genreId', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('genreId'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_genres_genreId'), 'genres', ['genreId'], unique=False)
    op.create_table('locations',
    sa.Column('locationId', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('locationId')
    )
    op.create_index(op.f('ix_locations_locationId'), 'locations', ['locationId'], unique=False)
    op.create_table('seasons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('animeId', sa.Integer(), nullable=False),
    sa.Column('seasonNumber', sa.Integer(), nullable=False),
    sa.Column('seasonName', sa.String(length=255), nullable=True),
    sa.Column('seasonInfo', sa.String(length=255), nullable=True),
    sa.Column('seasonTrailer', sa.String(), nullable=True),
    sa.Column('seasonImage', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['animeId'], ['anime.animeId'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('animeId', 'seasonNumber', name='uq_anime_season')
    )
    op.create_table('users',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('userName', sa.String(length=32), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashedPassword', sa.String(), nullable=False),
    sa.Column('profilePicture', sa.String(), nullable=True),
    sa.Column('watchedAnime', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('watchingAnime', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('anime_watched_count', sa.Integer(), nullable=True),
    sa.Column('anime_watching_count', sa.Integer(), nullable=True),
    sa.Column('locationId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['locationId'], ['locations.locationId'], ),
    sa.PrimaryKeyConstraint('userId'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('userName')
    )
    op.create_index(op.f('ix_users_userId'), 'users', ['userId'], unique=False)
    op.create_table('ratings',
    sa.Column('ratingId', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('animeId', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('review_text', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['animeId'], ['anime.animeId'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.userId'], ),
    sa.PrimaryKeyConstraint('ratingId')
    )
    op.create_index(op.f('ix_ratings_ratingId'), 'ratings', ['ratingId'], unique=False)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('auth_group_permissions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name=op.f('auth_group_permissions_group_id_b120cbf9_fk_auth_group_id'), initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name=op.f('auth_group_permissio_permission_id_84c5c92e_fk_auth_perm'), initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('auth_group_permissions_pkey')),
    sa.UniqueConstraint('group_id', 'permission_id', name=op.f('auth_group_permissions_group_id_permission_id_0cd325b0_uniq'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('auth_group_permissions_permission_id_84c5c92e'), 'auth_group_permissions', ['permission_id'], unique=False)
    op.create_index(op.f('auth_group_permissions_group_id_b120cbf9'), 'auth_group_permissions', ['group_id'], unique=False)
    op.create_table('auth_permission',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('codename', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name='auth_permission_content_type_id_2f476e4b_fk_django_co', initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name='auth_permission_pkey'),
    sa.UniqueConstraint('content_type_id', 'codename', name='auth_permission_content_type_id_codename_01ab375a_uniq', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('auth_permission_content_type_id_2f476e4b'), 'auth_permission', ['content_type_id'], unique=False)
    op.create_table('auth_user_user_permissions',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['auth_permission.id'], name=op.f('auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm'), initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name=op.f('auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id'), initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('auth_user_user_permissions_pkey')),
    sa.UniqueConstraint('user_id', 'permission_id', name=op.f('auth_user_user_permissions_user_id_permission_id_14a6b632_uniq'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('auth_user_user_permissions_user_id_a95ead1b'), 'auth_user_user_permissions', ['user_id'], unique=False)
    op.create_index(op.f('auth_user_user_permissions_permission_id_1fbb5f2c'), 'auth_user_user_permissions', ['permission_id'], unique=False)
    op.create_table('auth_group',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='auth_group_pkey'),
    sa.UniqueConstraint('name', name='auth_group_name_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('auth_group_name_a6ea08ec_like'), 'auth_group', ['name'], unique=False)
    op.create_table('django_session',
    sa.Column('session_key', sa.VARCHAR(length=40), autoincrement=False, nullable=False),
    sa.Column('session_data', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('expire_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('session_key', name=op.f('django_session_pkey'))
    )
    op.create_index(op.f('django_session_session_key_c0390e0f_like'), 'django_session', ['session_key'], unique=False)
    op.create_index(op.f('django_session_expire_date_a5c62663'), 'django_session', ['expire_date'], unique=False)
    op.create_table('auth_user_groups',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['auth_group.id'], name=op.f('auth_user_groups_group_id_97559544_fk_auth_group_id'), initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name=op.f('auth_user_groups_user_id_6a12ed8b_fk_auth_user_id'), initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('auth_user_groups_pkey')),
    sa.UniqueConstraint('user_id', 'group_id', name=op.f('auth_user_groups_user_id_group_id_94350c0c_uniq'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('auth_user_groups_user_id_6a12ed8b'), 'auth_user_groups', ['user_id'], unique=False)
    op.create_index(op.f('auth_user_groups_group_id_97559544'), 'auth_user_groups', ['group_id'], unique=False)
    op.create_table('django_content_type',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('app_label', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('model', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='django_content_type_pkey'),
    sa.UniqueConstraint('app_label', 'model', name='django_content_type_app_label_model_76bd3d3b_uniq', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('django_admin_log',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('action_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('object_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('object_repr', sa.VARCHAR(length=200), autoincrement=False, nullable=False),
    sa.Column('action_flag', sa.SMALLINT(), autoincrement=False, nullable=False),
    sa.Column('change_message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('content_type_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.CheckConstraint('action_flag >= 0', name=op.f('django_admin_log_action_flag_check')),
    sa.ForeignKeyConstraint(['content_type_id'], ['django_content_type.id'], name=op.f('django_admin_log_content_type_id_c4bce8eb_fk_django_co'), initially='DEFERRED', deferrable=True),
    sa.ForeignKeyConstraint(['user_id'], ['auth_user.id'], name=op.f('django_admin_log_user_id_c564eba6_fk_auth_user_id'), initially='DEFERRED', deferrable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('django_admin_log_pkey'))
    )
    op.create_index(op.f('django_admin_log_user_id_c564eba6'), 'django_admin_log', ['user_id'], unique=False)
    op.create_index(op.f('django_admin_log_content_type_id_c4bce8eb'), 'django_admin_log', ['content_type_id'], unique=False)
    op.create_table('django_migrations',
    sa.Column('id', sa.BIGINT(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=9223372036854775807, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('app', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('applied', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('django_migrations_pkey'))
    )
    op.create_table('auth_user',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=False, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('last_login', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('username', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=150), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    sa.Column('is_staff', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('date_joined', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('auth_user_pkey')),
    sa.UniqueConstraint('username', name=op.f('auth_user_username_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index(op.f('auth_user_username_6821ab7c_like'), 'auth_user', ['username'], unique=False)
    op.drop_index(op.f('ix_ratings_ratingId'), table_name='ratings')
    op.drop_table('ratings')
    op.drop_index(op.f('ix_users_userId'), table_name='users')
    op.drop_table('users')
    op.drop_table('seasons')
    op.drop_index(op.f('ix_locations_locationId'), table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_genres_genreId'), table_name='genres')
    op.drop_table('genres')
    op.drop_index(op.f('ix_anime_animeId'), table_name='anime')
    op.drop_table('anime')
    # ### end Alembic commands ###
