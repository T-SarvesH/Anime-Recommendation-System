"""Create the initial tables

Revision ID: afbdce4d41a8
Revises: 
Create Date: 2025-06-12 15:20:54.377958

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'afbdce4d41a8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('anime',
    sa.Column('animeId', sa.Integer(), nullable=False),
    sa.Column('animeName', sa.String(), nullable=False),
    sa.Column('genres', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('is_adult_rated', sa.Boolean(), nullable=True),
    sa.Column('is_running', sa.Boolean(), nullable=True),
    sa.Column('releaseDate', sa.DateTime(), nullable=False),
    sa.Column('seasons', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('image_url_base_anime', sa.String(), nullable=True),
    sa.Column('trailer_url_base_anime', sa.String(), nullable=True),
    sa.Column('studio', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('animeId'),
    sa.UniqueConstraint('animeName')
    )
    op.create_index(op.f('ix_anime_animeId'), 'anime', ['animeId'], unique=False)
    op.create_table('genres',
    sa.Column('genreId', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('genreId'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_genres_genreId'), 'genres', ['genreId'], unique=False)
    op.create_table('locations',
    sa.Column('locationId', sa.Integer(), nullable=False),
    sa.Column('country', sa.String(length=50), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('locationId')
    )
    op.create_index(op.f('ix_locations_locationId'), 'locations', ['locationId'], unique=False)
    op.create_table('seasons',
    sa.Column('animeId', sa.Integer(), nullable=False),
    sa.Column('seasonNumber', sa.Integer(), nullable=False),
    sa.Column('seasonName', sa.String(length=255), nullable=True),
    sa.Column('seasonInfo', sa.String(length=255), nullable=True),
    sa.Column('seasonTrailer', sa.String(), nullable=True),
    sa.Column('seasonImage', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['animeId'], ['anime.animeId'], ),
    sa.PrimaryKeyConstraint('animeId', 'seasonNumber', name='pk_season')
    )
    op.create_table('users',
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('userName', sa.String(length=32), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashedPassword', sa.String(), nullable=False),
    sa.Column('profilePicture', sa.String(), nullable=True),
    sa.Column('watchedAnime', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('watchingAnime', sa.ARRAY(sa.Integer()), nullable=True),
    sa.Column('anime_watched_count', sa.Integer(), nullable=True),
    sa.Column('anime_watching_count', sa.Integer(), nullable=True),
    sa.Column('locationId', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['locationId'], ['locations.locationId'], ),
    sa.PrimaryKeyConstraint('userId'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('userName')
    )
    op.create_index(op.f('ix_users_userId'), 'users', ['userId'], unique=False)
    op.create_table('ratings',
    sa.Column('ratingId', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('animeId', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('review_text', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['animeId'], ['anime.animeId'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.userId'], ),
    sa.PrimaryKeyConstraint('ratingId')
    )
    op.create_index(op.f('ix_ratings_ratingId'), 'ratings', ['ratingId'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_ratings_ratingId'), table_name='ratings')
    op.drop_table('ratings')
    op.drop_index(op.f('ix_users_userId'), table_name='users')
    op.drop_table('users')
    op.drop_table('seasons')
    op.drop_index(op.f('ix_locations_locationId'), table_name='locations')
    op.drop_table('locations')
    op.drop_index(op.f('ix_genres_genreId'), table_name='genres')
    op.drop_table('genres')
    op.drop_index(op.f('ix_anime_animeId'), table_name='anime')
    op.drop_table('anime')
    # ### end Alembic commands ###
